Graphing Calculator Requirements

Team Members:
Ken and Daniel

Purpose:
This project will be a graphing calculator that can be used on a computer

Requirements:

General 
1.	Name: platform_os
	Type: constraint 
	Summary: computer will need to run Windows 10	

2. 	Name: coding_language_experience
	Type: risk
	Summary: Daniel has only taken 1 class in C# while Ken very little experience with it
	
3.	Name: display
	Type: functional 
	Summary: show inputs and output results on a screen at the top of the application
	
4.	Name: numeric_buttons
	Type: functional
	Summary: 0-9 buttons
	
5.	Name: decimal_button
	Type: functional
	Summary: button to add decimal point

6.	Name: decimal_point
	Type: constraint
	Summary: there can only be one decimal per number
	
7.	Name: negative_button
	Type: functional
	Summary: button to add a negative sign to a number
	
8.	Name: artithmetic_buttons
	Type: functional 
	Summary: artithmetic operators (+,-,x,/) and equals (=)
	
9.	Name: fancy_division
	Type: functional
	Summary: division that shows a fraction. The fraction can change the size of the numerator and denominator as needed to 		 fit, whichever is larger. length of fraction can scale to size of numerator or denominator
	
10.	Name: misc_buttons
	Type: functional
	Summary: exponents, parenthesis, trig, inverse trig, square roots, nth roots, absolute value, logarithm, factorial, modulus
	
11.	Name: order_of_operations
	Type: constraint
	Summary: have calculator follow order of operations
	
12.	Name: infix_operations
	Type: constraint
	Summary: the calculator will work with infix notation	
	
13.	Name: alphabetic keyboard
	Type: functional 
	Summary: keyboard for input on calculator screen
	
14. 	Name: character_support
	Type: constraint
	Summary: the keyboard will only support alphabetic characters and characters necessary for mathematic calculations. Not all characters on a QWERTY keyboard are used in math
	
15.	Name: numeric_constants
	Type: functional
	Summary: pi, e, accurate to 15 digits
	
16.	Name: trig_mode
	Type: functional
	Summary: calculations can operate in radians or degrees for calcualting trig
	
17.	Name: clear_all
	Type: functional
	Summary: clears both standard display and graph display without clearing what is stored in any variables
	
18.	Name: show_error
	Type: functional 
	Summary: print an error on the screen when there are not enough arguments for a funciton or for syntax errors

19.	Name: mode_switch
	Type: functional
	Summary: single button that will switch to the mode not in use. If on standard, button will switch to graph and vice versa

20.	Name: sqaure_root_scaling
	Type: fuctional
	Summary: the size of the square root will scale with what is put inside, it will be able to increase in length and size as needed

21.	Name: input_boxes
	Type: fuctional
	Summary: in the event an operator needs an input (sqaure root, fraction, matrices, summation, etc) to determine how the operator will appear, there will be boxes in the areas that need an input 

22.	Name: cursor
	Type: functional
	Summary: There will be a blinking vertical line that acts as a cursor to show where a character will be place when it is inputted, this cursor will move with what is typed. The cursor can be moved to change the location of input in the event something that has been previously typed needs to be fixed
	
23.	Name: view_previous_results
	Type: functional
	Summary: The user can scroll up the screen to see past inputs and results 
	
24. 	Name: copy_paste
	Type: functional
	Summary: the user will be able to copy and paste anything from the current line or frome previous calculations
	
	
Standard Mode
1.	Name: display_matrix
	Type: funcitonal 
	Summary: input and display matricies with a size defined by the user
	
2.	Name: reduce_matrix
	Type: functional
	Summary: reduce an inputted matrix into reduce row echelon form
	
3.	Name: inequalities
	Type: functional 
	Summary: input and show results of inequalities whether they are true or false
	
4.	Name: summations
	Type: functional
	Summary: input and solve summations
	
5.	Name: simplify_fractions
	Type: functional
	Summary: simplify an inputted fraction into proper form
	
6.	Name: convert_decimal_fraction
	Type: functional 
	Summary: convert a fraction to a decimal and vice versa
	
7.	Name: store_variable
	Type: functional
	Summary: store a number to a alphabetic variable
	
8.	Name: clear_specific_variable
	Type: functional
	Summary: user can choose a specific variable to delete out of all the variables stored
	
9.	Name: clear_all_variables
	Type: functional 
	Summary: clear all the variables that are stored
	
10.	Name: clear_line
	Type: functional 
	Summary: clear the line of input
	
11.	Name: clear_standard
	Type: functional
	Summary: clear everything displayed on the standard mode screen without clearing varibales and their definitions
	
12.	Name: default_accuracy
	Type: constraint
	Summary: the output will default to showing 6 numbers with decimal included, otherwise it will show the result in scientific notation if more accuracy is needed
	
13.	Name: rounding_accuracy
	Type: functional
	Summary: user can determine how many decimal points they would like to be displayed, from 0 up to 15 digits


Graphing Mode
1.	Name: 2d_graph
	Type: constraint
	Summary: can only graph in 2 dimensions
	
2.	Name: graph_functions
	Type: functional
	Summary: display a function inputted by the user
	
3.	Name: multiple_functions
	Type: functional
	Summary: the graph can have multiple functions displayed on the same graph

4.	Name: delete_function
	Type: functional
	Summary: the user can delete a specific function from the graph that they choose
	
5.	Name: edit_function
	Type: functional
	Summary: the user can edit what a function equals [f(x)=x -> f(x)=x^2]
	
6.	Name: switch_functions
	Type: functional 
	Summary: switch between which function is being edited
	
7.	Name: zoom
	Type: functional
	Summary: zoom in and out of a graph from a point chosen on the graph
	
8.	Name: standard_zoom
	Type: functional
	Summary: resizes back to default zoom interval	

9.	Name: default_zoom_interval
	Type: constraint
	Summary: the default interval for the graph will be -10 < x < 10 and -10 < y < 10
	
10.	Name: change_view_interval
	Type: functional
	Summary: change the display over separate intervals of the y and x axis
	
11.	Name: show_axes
	Type: functional
	Summary: show and hide axes on the graph
	
12.	Name: find_zero
	Type: functional
	Summary: find the root of a chosen function where a line crosses x = 0
	
13.	Name: find_intersection
	Type: functional 
	Summary: find the intersection of two graphs
	
14.	Name: find_min_max
	Type: functional
	Summary: find the min and max of a function within a given interval in the x direction if there is one, otherwise it will not display a result
	
15.	Name: display_table
	Type: functional
	Summary: display a table of the points on the functions in the graph
	
16.	Name: data_points_graph
	Type: functional
	Summary: input a set of points into a table and display the points in a graph
	
17.	Name: find_line_of_fit
	Type: functional
	Summary: find the line of best fit for a table of user inputted data points
	
18.	Name: clear_graph
	Type: functional
	Summary: clear graph and all functions that are displayed leaving behind a default_blank_screen

19.	Name: default_blank_screen
	Type: constraint
	Summary: a blank graph will be in the default zoom interval, showing the axes, and only displaying the grid number for the edges of the screen and x=1,y=1










8.	Name:
	Type:
	Summary:
